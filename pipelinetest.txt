; 	ahf's first assembly test program.
;------------------------------------------------------------------------------
;	Assembler directives:
;------------------------------------------------------------------------------
;
;
;
	.directives;
	;
	.equ	constOne	 0x12;
	.equ	constTwo	 0x2;
	;
	.enddirectives;
;------------------------------------------------------------------------------
;	Constant segment:
;------------------------------------------------------------------------------
; These values are initialized in the locations at the end of the code segment.
; For now, .word is the only constant initialization assembly directive.
; After assembling the code, during the final run, the constant name is 
;   replaced with its location address in the program memory.
	.constants;
;
	.word	firstConstWord	0xFFFF;
    .word   secondConstWord 0xEEEE;
	;
	.endconstants;
;------------------------------------------------------------------------------
;	Code segment:
;------------------------------------------------------------------------------
;   first ST/LD var as info, 2nd as storing/loading to register
	.code;
			ADDC	R2, 0x0A;
			ADDC	R3, 0xA;
			ADDC	R7, 0xA;
			ST		0x00, R2;
			ST		0x20, R2;
			LD		0x12, R5;
			LD		0x22, R2;
			LD		0x32, R3;
			LD		0x42, R4;
			ST		0x52, R7;
			ADDC	R5, 0x3;
			ADD		R3, R2;
			SUBC	R2, 0x02;
			
            SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
			SUB    	R2, R5;
			OR 		R3, R5;
			NOT		R2;
			AND 	R2, R3;
			SHRA	R2, 0x1;
			ADDC	R4, 0x8;
			SHRA	R4, 0x2;
			ROTR	R4, 0x2;
	.endcode;
